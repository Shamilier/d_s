const express = require('express');
const axios = require('axios');
const cors = require('cors');
const { v4: uuidv4 } = require('uuid');
const nodemailer = require('nodemailer');
require('dotenv').config();

const app = express();
app.use(cors({ origin: 'https://disciplaner.ru' }));
app.use(express.json());

// ==== YooKassa ====
// ==== YooKassa ====
const SHOP_ID = process.env.SHOP_ID;
const API_KEY = process.env.API_KEY;

// ==== –ü—Ä–æ–¥—É–∫—Ç—ã ====
const productLinks = {
  product1: 'https://docs.google.com/spreadsheets/d/1TFDy9c4LjhRGz295WhIAhENbkGUCamH-9fhclelO8Oo/edit?usp=sharing',
  product2: 'https://docs.google.com/spreadsheets/d/1iJ4GeokUGW3Gc5OW7tH06aL38qhaY0oZGNNEBiAIEbk/edit?usp=sharing ',
  product3: 'https://docs.google.com/spreadsheets/d/1yQ6lnEbe3x30x_fHLCp4CH9fRbjME8UK1g8u-_PVrd4/edit?usp=sharing'
};

// –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–ª–∞—Ç–µ–∂–µ–π
const payments = {};

// ==== SMTP.bz —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç ====
const transporter = nodemailer.createTransport({
  host: 'connect.smtp.bz',
  port: 465, // SSL
  secure: true,
  auth: {
    user: 'shamilgaliev20@mail.ru',
    pass: 'W9oSJSNXMEvE '
  }
});

app.get('/test-email', async (req, res) => {
  try {
    await transporter.sendMail({
      from: '"Disciplaner" <info@disciplaner.ru>',
      to: 'Shamilgaliev18@mail.ru', // —Å—é–¥–∞ —É–∫–∞–∂–∏ –∞–¥—Ä–µ—Å, –∫—É–¥–∞ —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç
      subject: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ Disciplaner',
      text: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SMTP.bz'
    });
    res.send('‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', err.message);
    res.status(500).send('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ' + err.message);
  }
});

// ==== 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ ====
app.post('/create-payment', async (req, res) => {
  const idempotenceKey = uuidv4();
  const { amount, email, items } = req.body;

  if (!email || !items || items.length === 0) {
    return res.status(400).json({ error: 'Email –∏ —Ç–æ–≤–∞—Ä—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
  }

  try {
  const response = await axios.post(
    'https://api.yookassa.ru/v3/payments',
    {
      amount: { value: amount, currency: 'RUB' },
      confirmation: {
        type: 'redirect',
        return_url: 'https://disciplaner.ru/success'
      },
      capture: true,
      description: `–ü–æ–∫—É–ø–∫–∞ Disciplaner (${items.join(', ')})`,
  
      receipt: {
        customer: {
          email: email // Email –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏–∑ —Ñ–æ—Ä–º—ã
        },
        items: items.map(item => ({
          description: `Disciplaner: ${item}`,
          quantity: 1,
          amount: { value: amount, currency: 'RUB' },
          vat_code: 1 // 1 = –ë–µ–∑ –ù–î–°
        }))
      }
    },
    {
      headers: {
        'Idempotence-Key': idempotenceKey,
        'Authorization': 'Basic ' + Buffer.from(`${SHOP_ID}:${API_KEY}`).toString('base64'),
        'Content-Type': 'application/json'
      }
    }
  );

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞
    const paymentId = response.data.id;
    payments[paymentId] = { email, items };

    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω—ë–Ω –ø–ª–∞—Ç–µ–∂ ${paymentId} –¥–ª—è ${email}, —Ç–æ–≤–∞—Ä—ã: ${items.join(', ')}`);

    res.json({ confirmation_url: response.data.confirmation.confirmation_url });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', err.response?.data || err.message);
    res.status(500).send('–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã');
  }
});

// ==== 2. Webhook YooKassa ====
app.post('/yookassa-webhook', express.json(), async (req, res) => {
  const event = req.body;
  console.log('Webhook –æ—Ç YooKassa:', JSON.stringify(event, null, 2));

  if (event.event === 'payment.succeeded') {
    const paymentId = event.object.id;
    const paymentData = payments[paymentId];

    if (paymentData) {
      const { email, items } = paymentData;

      // –°–æ–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫–∏ –¥–ª—è –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
      const selectedLinks = items.map(item => productLinks[item]).filter(Boolean);
      const messageText = `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É!\n–í–∞—à–∏ —Å—Å—ã–ª–∫–∏:\n${selectedLinks.join('\n')}`;

      try {
        await transporter.sendMail({
          from: '"Disciplaner" <info@disciplaner.ru>',
          to: email,
          subject: '–í–∞—à–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã Disciplaner',
          text: messageText
        });
        console.log(`‚úÖ –°—Å—ã–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ ${email}`);
      } catch (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞: ${err.message}`);
      }
    } else {
      console.warn(`‚ö† –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–ª–∞—Ç–µ–∂–µ ${paymentId} –≤ –ø–∞–º—è—Ç–∏`);
    }
  }

  res.sendStatus(200);
});

// ==== 3. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ====
app.listen(3000, () => console.log('üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ http://localhost:3000'));
